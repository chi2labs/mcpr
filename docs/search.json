[{"path":"/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"file provides guidance Claude Code (claude.ai/code) working code repository.","code":""},{"path":"/CLAUDE.html","id":"repository-overview","dir":"","previous_headings":"","what":"Repository Overview","title":"CLAUDE.md","text":"mcpr R package creating Model Context Protocols R code. goal expose file, directory entire package Model Context Protocol (MCP) server allow access Claude Desktop LLM systems.","code":""},{"path":[]},{"path":"/CLAUDE.html","id":"build-and-check","dir":"","previous_headings":"Development Commands","what":"Build and Check","title":"CLAUDE.md","text":"","code":"# Build the package R CMD build .  # Check the package (includes running tests) R CMD check moodleR_*.tar.gz  # Install locally R CMD INSTALL moodleR_*.tar.gz"},{"path":"/CLAUDE.html","id":"testing","dir":"","previous_headings":"Development Commands","what":"Testing","title":"CLAUDE.md","text":"","code":"# Run all tests devtools::test()  # Run specific test file devtools::test(filter = \"test_name\")"},{"path":"/CLAUDE.html","id":"documentation","dir":"","previous_headings":"Development Commands","what":"Documentation","title":"CLAUDE.md","text":"","code":"# Generate documentation from roxygen2 comments devtools::document()  # Build vignettes devtools::build_vignettes()  # Build website for package pkgdown::build_site(preview = FALSE)"},{"path":"/CLAUDE.html","id":"repository","dir":"","previous_headings":"","what":"Repository","title":"CLAUDE.md","text":"repo chi2labs/mcpr","code":""},{"path":[]},{"path":"/CLAUDE.html","id":"http-transport-recommended","dir":"","previous_headings":"MCP Server Implementation","what":"HTTP Transport (Recommended)","title":"CLAUDE.md","text":"mcpr package uses HTTP transport reliable MCP server implementation. approach: - Provides stable connections Claude Desktop - Supports multiple concurrent clients - Enables easy testing standard HTTP tools - Avoids stdin/stdout handling complexity","code":""},{"path":"/CLAUDE.html","id":"configuration-example","dir":"","previous_headings":"MCP Server Implementation","what":"Configuration Example","title":"CLAUDE.md","text":"","code":"{   \"mcpServers\": {     \"r-server\": {       \"url\": \"http://localhost:8080/mcp\"     }   } }"},{"path":"/CLAUDE.html","id":"key-requirements","dir":"","previous_headings":"MCP Server Implementation","what":"Key Requirements","title":"CLAUDE.md","text":"Clean JSON output: Ensure responses follow MCP protocol specification Proper error handling: Return appropriate JSON-RPC error responses Array serialization: Empty arrays must serialize [] {} using auto_unbox HTTP endpoints: Implement /mcp protocol, /health monitoring","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 mcpr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/creating-servers.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating MCP Servers with mcpr","text":"Model Context Protocol (MCP) allows Large Language Models like Claude interact external tools data sources. However, R’s stdin handling subprocess contexts requires special handling. mcpr package solves providing Node.js wrapper templates properly manage communication MCP clients R servers.","code":""},{"path":[]},{"path":"/articles/creating-servers.html","id":"generating-a-simple-server","dir":"Articles","previous_headings":"Quick Start","what":"Generating a Simple Server","title":"Creating MCP Servers with mcpr","text":"creates complete server package ./mcp-hello-world/ : - wrapper.js - Node.js wrapper handles stdin/stdout - server.R - R server implementation - package.json - NPM package configuration - test.js - Test script validate server - README.md - Documentation","code":"library(mcpr)  # Generate a basic MCP server generate_mcp_server(   name = \"hello-world\",   title = \"Hello World Server\",   description = \"A simple MCP server that greets users\" )"},{"path":"/articles/creating-servers.html","id":"testing-your-server","dir":"Articles","previous_headings":"Quick Start","what":"Testing Your Server","title":"Creating MCP Servers with mcpr","text":"","code":"cd mcp-hello-world npm install npm test"},{"path":"/articles/creating-servers.html","id":"adding-to-claude-desktop","dir":"Articles","previous_headings":"Quick Start","what":"Adding to Claude Desktop","title":"Creating MCP Servers with mcpr","text":"Add Claude Desktop configuration:","code":"{   \"mcpServers\": {     \"hello-world\": {       \"command\": \"node\",       \"args\": [\"/path/to/mcp-hello-world/wrapper.js\"]     }   } }"},{"path":[]},{"path":"/articles/creating-servers.html","id":"basic-example","dir":"Articles","previous_headings":"Creating Servers with Tools","what":"Basic Example","title":"Creating MCP Servers with mcpr","text":"","code":"# Define tools tools <- list(   greet = list(     description = \"Greet a person by name\",     parameters = list(       name = list(type = \"string\", description = \"Name to greet\")     )   ),   calculate = list(     description = \"Evaluate an R expression\",     parameters = list(       expression = list(type = \"string\", description = \"R expression to evaluate\")     )   ) )  # Generate server with tools generate_mcp_server(   name = \"my-tools\",   title = \"My R Tools\",   description = \"Useful R tools for data analysis\",   tools = tools )"},{"path":"/articles/creating-servers.html","id":"using-the-programmatic-api","dir":"Articles","previous_headings":"Creating Servers with Tools","what":"Using the Programmatic API","title":"Creating MCP Servers with mcpr","text":"","code":"# Create server programmatically server <- mcp(name = \"Data Analyzer\", version = \"1.0.0\")  # Add tools server$mcp_tool(   name = \"summarize\",   fn = function(data) {     summary(data)   },   description = \"Summarize a dataset\" )  server$mcp_tool(   name = \"correlation\",   fn = function(x, y) {     cor(x, y)   },   description = \"Calculate correlation\" )  # Generate standalone package server$generate(path = \"./servers\", template = \"full\")"},{"path":"/articles/creating-servers.html","id":"working-with-resources","dir":"Articles","previous_headings":"","what":"Working with Resources","title":"Creating MCP Servers with mcpr","text":"Resources provide read-access data:","code":"resources <- list(   list(     uri = \"data://iris\",     name = \"Iris Dataset\",     description = \"Classic iris dataset\"   ),   list(     uri = \"info://system\",     name = \"System Information\",     description = \"R system information\"   ) )  generate_mcp_server(   name = \"data-provider\",   title = \"Data Provider\",   description = \"Provides access to datasets\",   resources = resources )"},{"path":[]},{"path":"/articles/creating-servers.html","id":"yaml-configuration","dir":"Articles","previous_headings":"Using Configuration Files","what":"YAML Configuration","title":"Creating MCP Servers with mcpr","text":"Create server-config.yaml: Generate configuration:","code":"name: analysis-server title: Statistical Analysis Server description: Comprehensive statistical analysis tools version: 1.0.0 author: Your Name  tools:   t_test:     description: Perform t-test     parameters:       x:         type: array         description: First sample       y:         type: array         description: Second sample          regression:     description: Linear regression     parameters:       formula:         type: string         description: Model formula       data:         type: object         description: Data frame          resources:   - uri: \"data://example\"     name: \"Example Data\"     description: \"Sample datasets\" generate_from_config(\"server-config.yaml\")"},{"path":"/articles/creating-servers.html","id":"json-configuration","dir":"Articles","previous_headings":"Using Configuration Files","what":"JSON Configuration","title":"Creating MCP Servers with mcpr","text":"","code":"# Create example configuration create_example_config(\"server-config.json\", format = \"json\")  # Generate from JSON generate_from_config(\"server-config.json\")"},{"path":[]},{"path":"/articles/creating-servers.html","id":"full-template","dir":"Articles","previous_headings":"Templates","what":"Full Template","title":"Creating MCP Servers with mcpr","text":"default “full” template includes: - Complete MCP protocol implementation - Support tools, resources, prompts - Comprehensive error handling - Detailed comments documentation","code":""},{"path":"/articles/creating-servers.html","id":"minimal-template","dir":"Articles","previous_headings":"Templates","what":"Minimal Template","title":"Creating MCP Servers with mcpr","text":"simple use cases:","code":"generate_mcp_server(   name = \"simple\",   title = \"Simple Server\",   description = \"Minimal MCP server\",   template = \"minimal\" )"},{"path":[]},{"path":"/articles/creating-servers.html","id":"exposing-r-packages","dir":"Articles","previous_headings":"Advanced Usage","what":"Exposing R Packages","title":"Creating MCP Servers with mcpr","text":"","code":"server <- mcp(name = \"Stats Server\", version = \"1.0.0\")  # Expose specific functions from stats package server$mcp_package(   package = \"stats\",   include = c(\"lm\", \"glm\", \"t.test\", \"cor.test\") )  # Generate server server$generate()"},{"path":"/articles/creating-servers.html","id":"custom-wrapper-configuration","dir":"Articles","previous_headings":"Advanced Usage","what":"Custom Wrapper Configuration","title":"Creating MCP Servers with mcpr","text":"Node.js wrapper filters stderr prevent R output breaking MCP connection. can customize filtering:","code":"// In wrapper.js const filterPatterns = [   /^Attaching package:/,   /^The following objects are masked/,   /^Loading required package:/,   // Add custom patterns ];"},{"path":"/articles/creating-servers.html","id":"http-transport-new","dir":"Articles","previous_headings":"","what":"HTTP Transport (New!)","title":"Creating MCP Servers with mcpr","text":"version 0.1.0, mcpr supports HTTP transport alternative stdio. HTTP transport offers several advantages: Multiple concurrent clients: Unlike stdio limited one client, HTTP servers can handle multiple connections Easier debugging: Use standard HTTP tools like curl Postman Better deployment options: Deploy cloud platforms, containers, behind load balancers subprocess complexity: Avoids R’s stdin handling limitations","code":""},{"path":"/articles/creating-servers.html","id":"creating-an-http-server","dir":"Articles","previous_headings":"HTTP Transport (New!)","what":"Creating an HTTP Server","title":"Creating MCP Servers with mcpr","text":"","code":"# Using the convenience function server <- mcp_http(   name = \"My HTTP Server\",   version = \"1.0.0\",   host = \"127.0.0.1\",   port = 8080 )  # Add tools, resources, and prompts as usual server$mcp_tool(   name = \"analyze\",   fn = function(data) { summary(as.numeric(strsplit(data, \",\")[[1]])) },   description = \"Analyze comma-separated numbers\" )  # Start the server server$mcp_run()  # Automatically uses HTTP transport"},{"path":"/articles/creating-servers.html","id":"quick-start-with-http","dir":"Articles","previous_headings":"HTTP Transport (New!)","what":"Quick Start with HTTP","title":"Creating MCP Servers with mcpr","text":"","code":"# Start a hello world HTTP server mcp_hello_world_http(port = 8080)  # Test it with curl # curl -X POST http://localhost:8080/mcp \\ #   -H \"Content-Type: application/json\" \\ #   -d '{\"jsonrpc\":\"2.0\",\"method\":\"tools/list\",\"id\":1}'"},{"path":"/articles/creating-servers.html","id":"http-server-features","dir":"Articles","previous_headings":"HTTP Transport (New!)","what":"HTTP Server Features","title":"Creating MCP Servers with mcpr","text":"Built-endpoints: POST /mcp - Main MCP protocol endpoint GET /health - Health check endpoint GET / - Server information Logging support: Swagger documentation (enabled):","code":"server <- mcp_http(   name = \"Logged Server\",   log_file = \"server.log\",   log_level = \"debug\"  # debug, info, warn, error ) server$mcp_run(docs = TRUE) # Visit http://localhost:8080/__docs__"},{"path":"/articles/creating-servers.html","id":"migrating-from-stdio-to-http","dir":"Articles","previous_headings":"HTTP Transport (New!)","what":"Migrating from STDIO to HTTP","title":"Creating MCP Servers with mcpr","text":"","code":"# Before (stdio) server <- mcp(name = \"My Server\") # ... add tools ... server$mcp_run(transport = \"stdio\")  # After (HTTP) server <- mcp(name = \"My Server\") # ... add tools ... server$mcp_run(transport = \"http\", port = 8080)"},{"path":"/articles/creating-servers.html","id":"using-with-claude-desktop","dir":"Articles","previous_headings":"HTTP Transport (New!)","what":"Using with Claude Desktop","title":"Creating MCP Servers with mcpr","text":"Claude Desktop configuration HTTP servers: create script file:","code":"{   \"mcpServers\": {     \"my-http-server\": {       \"command\": \"Rscript\",       \"args\": [\"-e\", \"library(mcpr); server <- mcp_http('My Server'); server$mcp_tool('hello', function(name='World') paste('Hello', name)); server$mcp_run()\"]     }   } } # my-server.R library(mcpr) server <- mcp_http(\"My Server\", port = 8080) # Add your tools here server$mcp_run() {   \"mcpServers\": {     \"my-http-server\": {       \"command\": \"Rscript\",       \"args\": [\"path/to/my-server.R\"]     }   } }"},{"path":"/articles/creating-servers.html","id":"deployment-options","dir":"Articles","previous_headings":"HTTP Transport (New!)","what":"Deployment Options","title":"Creating MCP Servers with mcpr","text":"HTTP servers can deployed : Local development: Run localhost testing Docker containers: Package server container Cloud platforms: Deploy Heroku, Google Cloud Run, etc. Posit Connect: Deploy R-based HTTP APIs Corporate networks: Run behind firewalls proper authentication","code":""},{"path":"/articles/creating-servers.html","id":"security-considerations","dir":"Articles","previous_headings":"HTTP Transport (New!)","what":"Security Considerations","title":"Creating MCP Servers with mcpr","text":"deploying HTTP servers: Authentication: MCP spec requires OAuth 2.1 remote servers HTTPS: Use TLS encryption production deployments Rate limiting: Implement rate limiting public endpoints CORS: Configure CORS policies appropriately","code":""},{"path":[]},{"path":"/articles/creating-servers.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"Creating MCP Servers with mcpr","text":"Server doesn’t connect: Ensure stderr output R Tools working: Check parameter definitions match function signature Resources empty: Verify resource functions return proper content","code":""},{"path":"/articles/creating-servers.html","id":"debug-mode","dir":"Articles","previous_headings":"Troubleshooting","what":"Debug Mode","title":"Creating MCP Servers with mcpr","text":"Enable debug logging: writes debug information mcp-debug.log.","code":"DEBUG=1 node wrapper.js"},{"path":"/articles/creating-servers.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Creating MCP Servers with mcpr","text":"Always use Node.js wrapper - Direct R execution won’t work Claude Desktop Keep stderr clean - Use suppressMessages() suppressWarnings() R code Test thoroughly - Use included test script deployment Document tools - Provide clear descriptions better LLM understanding","code":""},{"path":"/articles/creating-servers.html","id":"example-complete-data-analysis-server","dir":"Articles","previous_headings":"","what":"Example: Complete Data Analysis Server","title":"Creating MCP Servers with mcpr","text":"","code":"# Create a comprehensive data analysis server tools <- list(   read_csv = list(     description = \"Read CSV file\",     parameters = list(       path = list(type = \"string\", description = \"File path\")     )   ),      summarize = list(     description = \"Generate summary statistics\",     parameters = list(       data = list(type = \"object\", description = \"Data frame\")     )   ),      plot_histogram = list(     description = \"Create histogram\",     parameters = list(       data = list(type = \"array\", description = \"Numeric data\"),       bins = list(type = \"number\", description = \"Number of bins\")     )   ),      linear_model = list(     description = \"Fit linear model\",     parameters = list(       formula = list(type = \"string\", description = \"Model formula\"),       data = list(type = \"object\", description = \"Data frame\")     )   ) )  resources <- list(   list(     uri = \"data://sample\",     name = \"Sample Datasets\",     description = \"Built-in R datasets\"   ) )  prompts <- list(   analyze = list(     description = \"Analyze a dataset comprehensively\"   ) )  generate_mcp_server(   name = \"data-analysis\",   title = \"R Data Analysis Server\",   description = \"Complete data analysis toolkit\",   tools = tools,   resources = resources,   prompts = prompts,   author = \"Data Science Team\" )"},{"path":"/articles/creating-servers.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Creating MCP Servers with mcpr","text":"mcpr package makes easy create MCP servers expose R functionality LLMs. Node.js wrapper ensures reliable communication, template system provides flexibility different use cases.","code":""},{"path":"/articles/using-decorators.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using Decorators in mcpr","text":"mcpr package provides decorator system similar plumber defining MCP (Model Context Protocol) servers. Decorators allow annotate R functions special comments describe exposed MCP. approach particularly useful existing R code want make available AI assistants like Claude.","code":""},{"path":"/articles/using-decorators.html","id":"decorator-syntax","dir":"Articles","previous_headings":"","what":"Decorator Syntax","title":"Using Decorators in mcpr","text":"Decorators mcpr use #* prefix (similar plumber) followed decorator tags. basic structure :","code":"#* @decorator_type #* @tag value #* @another_tag another value function_name <- function(parameters) {   # Function implementation }"},{"path":[]},{"path":"/articles/using-decorators.html","id":"mcp_tool","dir":"Articles","previous_headings":"Available Decorators","what":"@mcp_tool","title":"Using Decorators in mcpr","text":"@mcp_tool decorator exposes function MCP tool can called AI assistants. Required tags: - @description - clear description tool Optional tags: - @param - Parameter documentation (format: @param name description) - @returns - Description return value","code":"#* @mcp_tool #* @description Calculate the mean of a numeric vector #* @param x numeric vector to analyze #* @param na.rm logical whether to remove NA values (default: TRUE) calculate_mean <- function(x, na.rm = TRUE) {   mean(x, na.rm = na.rm) }"},{"path":"/articles/using-decorators.html","id":"mcp_resource","dir":"Articles","previous_headings":"Available Decorators","what":"@mcp_resource","title":"Using Decorators in mcpr","text":"@mcp_resource decorator exposes function MCP resource provides data information. Required tags: - @description - Description resource Optional tags: - @mime_type - MIME type resource (default: “application/json”)","code":"#* @mcp_resource #* @description Get system information #* @mime_type application/json get_system_info <- function() {   list(     r_version = R.version.string,     platform = R.version$platform,     locale = Sys.getlocale(),     timezone = Sys.timezone()   ) }"},{"path":"/articles/using-decorators.html","id":"mcp_prompt","dir":"Articles","previous_headings":"Available Decorators","what":"@mcp_prompt","title":"Using Decorators in mcpr","text":"@mcp_prompt decorator defines prompt template AI assistants can use. Required tags: - @description - Description prompt - @template - prompt template {{parameter}} placeholders Optional tags: - @param_* - Parameter descriptions (format: @param_name description)","code":"#* @mcp_prompt #* @description Generate a data analysis report #* @template Analyze the {{dataset}} using {{method}} and focus on {{aspect}}.  #*   Provide visualizations and statistical insights. #* @param_dataset The dataset to analyze #* @param_method The analysis method (e.g., \"regression\", \"clustering\") #* @param_aspect The aspect to focus on (e.g., \"trends\", \"outliers\") data_analysis_prompt <- NULL"},{"path":"/articles/using-decorators.html","id":"parameter-type-annotations","dir":"Articles","previous_headings":"","what":"Parameter Type Annotations","title":"Using Decorators in mcpr","text":"can specify parameter types @param documentation:","code":"#* @mcp_tool #* @description Perform statistical analysis #* @param data numeric vector or data.frame to analyze #* @param method character analysis method (\"mean\", \"median\", \"sd\") #* @param conf.level numeric confidence level (0-1) #* @param plot logical whether to create a plot analyze_data <- function(data, method = \"mean\", conf.level = 0.95, plot = FALSE) {   # Implementation }"},{"path":"/articles/using-decorators.html","id":"type-mappings","dir":"Articles","previous_headings":"Parameter Type Annotations","what":"Type Mappings","title":"Using Decorators in mcpr","text":"mcpr automatically maps R types JSON Schema types:","code":""},{"path":[]},{"path":"/articles/using-decorators.html","id":"loading-from-a-file","dir":"Articles","previous_headings":"Using Decorated Functions","what":"Loading from a File","title":"Using Decorators in mcpr","text":"Use mcp_source() method load decorated functions:","code":"# Create a server server <- mcp(name = \"My Analysis Server\", version = \"1.0.0\")  # Load decorated functions from a file server$mcp_source(\"analysis-tools.R\")  # Run the server server$mcp_run(transport = \"http\", port = 8080)"},{"path":"/articles/using-decorators.html","id":"loading-from-a-directory","dir":"Articles","previous_headings":"Using Decorated Functions","what":"Loading from a Directory","title":"Using Decorators in mcpr","text":"Use mcp_source_directory() load R files decorators:","code":"# Load all decorated functions from a directory server$mcp_source_directory(\"R/\", recursive = TRUE)"},{"path":"/articles/using-decorators.html","id":"scanning-for-decorated-files","dir":"Articles","previous_headings":"Using Decorated Functions","what":"Scanning for Decorated Files","title":"Using Decorators in mcpr","text":"Use scan_mcp_directory() find files containing MCP decorators:","code":"# Find all files with MCP decorators decorated_files <- scan_mcp_directory(\"R/\") print(decorated_files)"},{"path":"/articles/using-decorators.html","id":"complete-example","dir":"Articles","previous_headings":"","what":"Complete Example","title":"Using Decorators in mcpr","text":"’s complete example file various decorator types:","code":"# statistics-tools.R  #* @mcp_tool #* @description Calculate descriptive statistics for a numeric vector #* @param x numeric vector to analyze #* @param na.rm logical whether to remove NA values (default: TRUE) #* @param digits integer number of decimal places (default: 2) describe <- function(x, na.rm = TRUE, digits = 2) {   if (!is.numeric(x)) {     stop(\"x must be numeric\")   }      stats <- list(     n = length(x),     mean = mean(x, na.rm = na.rm),     median = median(x, na.rm = na.rm),     sd = sd(x, na.rm = na.rm),     min = min(x, na.rm = na.rm),     max = max(x, na.rm = na.rm),     q1 = quantile(x, 0.25, na.rm = na.rm),     q3 = quantile(x, 0.75, na.rm = na.rm)   )      # Round to specified digits   lapply(stats, round, digits = digits) }  #* @mcp_tool #* @description Create a frequency table for categorical data #* @param x character or factor vector #* @param sort logical whether to sort by frequency (default: TRUE) #* @param prop logical whether to include proportions (default: TRUE) frequency_table <- function(x, sort = TRUE, prop = TRUE) {   tbl <- table(x)      if (sort) {     tbl <- sort(tbl, decreasing = TRUE)   }      result <- data.frame(     value = names(tbl),     count = as.numeric(tbl),     stringsAsFactors = FALSE   )      if (prop) {     result$proportion <- result$count / sum(result$count)     result$percentage <- round(result$proportion * 100, 1)   }      result }  #* @mcp_resource #* @description Get available example datasets #* @mime_type application/json list_example_datasets <- function() {   # Get datasets from base R   data_list <- data(package = \"datasets\")$results      datasets <- data.frame(     name = data_list[, \"Item\"],     title = data_list[, \"Title\"],     stringsAsFactors = FALSE   )      # Add some metadata   datasets$rows <- NA   datasets$cols <- NA   datasets$class <- NA      for (i in 1:nrow(datasets)) {     dataset_name <- datasets$name[i]     if (exists(dataset_name)) {       obj <- get(dataset_name)       if (is.data.frame(obj) || is.matrix(obj)) {         datasets$rows[i] <- nrow(obj)         datasets$cols[i] <- ncol(obj)       }       datasets$class[i] <- class(obj)[1]     }   }      datasets }  #* @mcp_resource #* @description Load an example dataset #* @mime_type application/json load_dataset <- function(name) {   if (!exists(name)) {     stop(paste(\"Dataset\", name, \"not found\"))   }      dataset <- get(name)      # Convert to list format for JSON serialization   if (is.data.frame(dataset)) {     return(as.list(dataset))   } else if (is.matrix(dataset)) {     return(list(data = dataset, dim = dim(dataset)))   } else {     return(dataset)   } }  #* @mcp_prompt #* @description Request a statistical analysis #* @template Please analyze the {{dataset}} dataset focusing on {{variables}}. #*   Use {{methods}} and provide {{outputs}}. #*    #*   Additional requirements: {{requirements}} #* @param_dataset The name of the dataset to analyze #* @param_variables The variables to focus on (comma-separated) #* @param_methods The statistical methods to apply #* @param_outputs The desired outputs (e.g., \"summary statistics, plots, tests\") #* @param_requirements Any additional analysis requirements statistical_analysis_request <- NULL  #* @mcp_prompt #* @description Request a data visualization #* @template Create a {{plot_type}} visualization for the {{dataset}} dataset. #*   Show the relationship between {{x_var}} and {{y_var}}. #*   {{additional_instructions}} #* @param_plot_type The type of plot (e.g., \"scatter\", \"bar\", \"histogram\") #* @param_dataset The dataset to visualize #* @param_x_var The x-axis variable #* @param_y_var The y-axis variable (if applicable) #* @param_additional_instructions Any additional plotting instructions visualization_request <- NULL"},{"path":"/articles/using-decorators.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Using Decorators in mcpr","text":"Clear Descriptions: Always provide clear, concise descriptions decorators Parameter Documentation: Document parameters expected types Error Handling: Include appropriate error handling functions Return Values: Ensure functions return JSON-serializable objects Naming Conventions: Use descriptive, consistent names functions","code":""},{"path":[]},{"path":"/articles/using-decorators.html","id":"multi-line-descriptions","dir":"Articles","previous_headings":"Advanced Features","what":"Multi-line Descriptions","title":"Using Decorators in mcpr","text":"Use indentation multi-line descriptions:","code":"#* @mcp_tool #* @description Perform comprehensive statistical analysis including: #*   - Descriptive statistics #*   - Normality tests #*   - Correlation analysis #*   - Basic visualizations comprehensive_analysis <- function(data) {   # Implementation }"},{"path":"/articles/using-decorators.html","id":"excluding-functions","dir":"Articles","previous_headings":"Advanced Features","what":"Excluding Functions","title":"Using Decorators in mcpr","text":"’s @mcp_ignore decorator yet, can simply decorate functions don’t want expose:","code":"# This function will be exposed #* @mcp_tool #* @description Public analysis function analyze_public <- function(data) {   process_internal(data) }  # This function will NOT be exposed (no decorator) process_internal <- function(data) {   # Internal processing }"},{"path":"/articles/using-decorators.html","id":"integration-with-server-generation","dir":"Articles","previous_headings":"","what":"Integration with Server Generation","title":"Using Decorators in mcpr","text":"Decorated functions work seamlessly mcpr’s server generation features:","code":"# Generate a standalone server from decorated files generate_mcp_server(   name = \"stats-server\",   source = \"statistics-tools.R\",   output_dir = \"./servers\" )"},{"path":[]},{"path":"/articles/using-decorators.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"Using Decorators in mcpr","text":"Functions appearing: Ensure ’re using #* (just #) decorators Parameter types recognized: Check parameter names @param match function arguments JSON serialization errors: Ensure return values JSON-serializable File loading: Verify file path file contains valid R code","code":""},{"path":"/articles/using-decorators.html","id":"debugging","dir":"Articles","previous_headings":"Troubleshooting","what":"Debugging","title":"Using Decorators in mcpr","text":"see parsed decorator information:","code":"# Parse decorators without registering parsed <- parse_mcp_decorators(\"my-file.R\") str(parsed)"},{"path":"/articles/using-decorators.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Using Decorators in mcpr","text":"decorator system mcpr provides clean, intuitive way expose R functions MCP. using familiar roxygen2-style comments, can quickly make R code available AI assistants maintaining readable, well-documented code. examples, see inst/examples/decorated-functions.R file mcpr package.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aleksander Dietrichson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dietrichson (2025). mcpr: Model Context Protocol R. R package version 0.9.0, https://github.com/chi2labs/mcpr.","code":"@Manual{,   title = {mcpr: Model Context Protocol for R},   author = {Aleksander Dietrichson},   year = {2025},   note = {R package version 0.9.0},   url = {https://github.com/chi2labs/mcpr}, }"},{"path":"/index.html","id":"mcpr","dir":"","previous_headings":"","what":"Model Context Protocol for R","title":"Model Context Protocol for R","text":"mcpr exposes R functions Model Context Protocol (MCP), enabling seamless integration AI assistants like Claude Desktop.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Context Protocol for R","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"chi2labs/mcpr\")"},{"path":[]},{"path":"/index.html","id":"basic-server","dir":"","previous_headings":"Quick Start","what":"Basic Server","title":"Model Context Protocol for R","text":"","code":"library(mcpr)  # Create and configure server server <- mcp_http(\"My R Analysis Server\", \"1.0.0\", port = 8080)  # Add tools server$mcp_tool(   name = \"calculate_mean\",   fn = function(numbers) mean(numbers),   description = \"Calculate the mean of a numeric vector\" )  # Run server server$mcp_run()"},{"path":"/index.html","id":"using-decorators","dir":"","previous_headings":"Quick Start","what":"Using Decorators","title":"Model Context Protocol for R","text":"Create file decorated functions: Load run:","code":"# analysis-tools.R #* @mcp_tool #* @description Calculate summary statistics for a numeric vector #* @param x numeric vector to analyze #* @param na.rm logical whether to remove NA values (default: TRUE) calculate_stats <- function(x, na.rm = TRUE) {   list(     mean = mean(x, na.rm = na.rm),     median = median(x, na.rm = na.rm),     sd = sd(x, na.rm = na.rm),     min = min(x, na.rm = na.rm),     max = max(x, na.rm = na.rm)   ) } server <- mcp(\"Analysis Server\", \"1.0.0\") server$mcp_source(\"analysis-tools.R\") server$mcp_run(transport = \"http\", port = 8080)"},{"path":"/index.html","id":"configure-claude-desktop","dir":"","previous_headings":"","what":"Configure Claude Desktop","title":"Model Context Protocol for R","text":"Add Claude Desktop’s configuration:","code":"{   \"mcpServers\": {     \"r-analysis\": {       \"url\": \"http://localhost:8080/mcp\"     }   } }"},{"path":[]},{"path":"/index.html","id":"register-existing-functions","dir":"","previous_headings":"Advanced Usage","what":"Register Existing Functions","title":"Model Context Protocol for R","text":"","code":"server <- mcp_http(\"Stats Server\", \"1.0.0\")  server$mcp_tool(   name = \"t_test\",   fn = t.test,   description = \"Perform t-test\" )  server$mcp_tool(   name = \"cor_test\",    fn = cor.test,   description = \"Correlation test\" )"},{"path":"/index.html","id":"production-deployment","dir":"","previous_headings":"Advanced Usage","what":"Production Deployment","title":"Model Context Protocol for R","text":"","code":"server <- mcp_http(   name = \"Production Server\",   version = \"1.0.0\",   host = \"0.0.0.0\",  # Listen on all interfaces   port = 8080,   log_file = \"mcp-server.log\",   log_level = \"info\" )"},{"path":"/index.html","id":"docker-deployment","dir":"","previous_headings":"Advanced Usage","what":"Docker Deployment","title":"Model Context Protocol for R","text":"","code":"FROM rocker/r-ver:4.3.0 RUN install.packages(c(\"mcpr\", \"plumber\", \"jsonlite\")) COPY server.R /app/ WORKDIR /app EXPOSE 8080 CMD [\"Rscript\", \"server.R\"]"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Model Context Protocol for R","text":"Complete examples inst/examples/: - basic-server.R - Simple server basic tools - stats-server.R - Statistical analysis tools - data-server.R - Data manipulation visualization","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Model Context Protocol for R","text":"MIT + file LICENSE","code":""},{"path":"/reference/HttpTransport.html","id":null,"dir":"Reference","previous_headings":"","what":"HTTP Transport for MCP — HttpTransport","title":"HTTP Transport for MCP — HttpTransport","text":"Implements HTTP transport MCP communication using plumber. transport allows MCP servers accessed HTTP, enabling multi-client support easier deployment.","code":""},{"path":"/reference/HttpTransport.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"HTTP Transport for MCP — HttpTransport","text":"server MCP server instance plumber_app plumber application instance host Host address bind port Port number listen log_file Optional log file path log_level Logging level (\"debug\", \"info\", \"warn\", \"error\")","code":""},{"path":[]},{"path":"/reference/HttpTransport.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"HTTP Transport for MCP — HttpTransport","text":"HttpTransport$new() HttpTransport$start() HttpTransport$get_app() HttpTransport$clone()","code":""},{"path":"/reference/HttpTransport.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"HTTP Transport for MCP — HttpTransport","text":"Create new HTTP transport","code":""},{"path":"/reference/HttpTransport.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HTTP Transport for MCP — HttpTransport","text":"","code":"HttpTransport$new(   server,   host = \"127.0.0.1\",   port = 8080,   log_file = NULL,   log_level = \"info\" )"},{"path":"/reference/HttpTransport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HTTP Transport for MCP — HttpTransport","text":"server MCP server instance host Host address (default: \"127.0.0.1\") port Port number (default: 8080) log_file Optional path log file log_level Logging level (default: \"info\")","code":""},{"path":"/reference/HttpTransport.html","id":"method-start-","dir":"Reference","previous_headings":"","what":"Method start()","title":"HTTP Transport for MCP — HttpTransport","text":"Start HTTP transport","code":""},{"path":"/reference/HttpTransport.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"HTTP Transport for MCP — HttpTransport","text":"","code":"HttpTransport$start(docs = FALSE, quiet = FALSE)"},{"path":"/reference/HttpTransport.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"HTTP Transport for MCP — HttpTransport","text":"docs Whether enable Swagger documentation (default: FALSE) quiet Whether suppress plumber startup messages (default: FALSE)","code":""},{"path":"/reference/HttpTransport.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"HTTP Transport for MCP — HttpTransport","text":"running plumber API object","code":""},{"path":"/reference/HttpTransport.html","id":"method-get-app-","dir":"Reference","previous_headings":"","what":"Method get_app()","title":"HTTP Transport for MCP — HttpTransport","text":"Get plumber app (testing custom deployment)","code":""},{"path":"/reference/HttpTransport.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"HTTP Transport for MCP — HttpTransport","text":"","code":"HttpTransport$get_app()"},{"path":"/reference/HttpTransport.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"HTTP Transport for MCP — HttpTransport","text":"plumber API object Initialize logging Logger instance Create plumber application Handle incoming JSON-RPC message Handle initialize request Handle tools/list request Handle tools/call request Handle resources/list request Handle resources/read request Handle prompts/list request Handle prompts/get request Create error response","code":""},{"path":"/reference/HttpTransport.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"HTTP Transport for MCP — HttpTransport","text":"objects class cloneable method.","code":""},{"path":"/reference/HttpTransport.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"HTTP Transport for MCP — HttpTransport","text":"","code":"HttpTransport$clone(deep = FALSE)"},{"path":"/reference/HttpTransport.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"HTTP Transport for MCP — HttpTransport","text":"deep Whether make deep clone.","code":""},{"path":"/reference/MCPServer.html","id":null,"dir":"Reference","previous_headings":"","what":"MCP Server Class — MCPServer","title":"MCP Server Class — MCPServer","text":"R6 class representing Model Context Protocol server. class manages tools, resources, prompts, handles protocol communication.","code":""},{"path":"/reference/MCPServer.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MCP Server Class — MCPServer","text":"name Server name version Server version tools List registered tools resources List registered resources prompts List registered prompts","code":""},{"path":[]},{"path":"/reference/MCPServer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MCP Server Class — MCPServer","text":"MCPServer$new() MCPServer$mcp_tool() MCPServer$mcp_resource() MCPServer$mcp_prompt() MCPServer$mcp_source() MCPServer$mcp_package() MCPServer$mcp_run() MCPServer$generate() MCPServer$get_capabilities() MCPServer$execute_tool() MCPServer$get_resource() MCPServer$print() MCPServer$clone()","code":""},{"path":"/reference/MCPServer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"MCP Server Class — MCPServer","text":"Create new MCP server","code":""},{"path":"/reference/MCPServer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$new(name = NULL, version = NULL)"},{"path":"/reference/MCPServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"name Server name version Server version","code":""},{"path":"/reference/MCPServer.html","id":"method-mcp-tool-","dir":"Reference","previous_headings":"","what":"Method mcp_tool()","title":"MCP Server Class — MCPServer","text":"Register tool server","code":""},{"path":"/reference/MCPServer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$mcp_tool(name, fn, description = NULL, parameters = NULL)"},{"path":"/reference/MCPServer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"name Tool name fn Function execute description Tool description parameters Parameter schema (optional)","code":""},{"path":"/reference/MCPServer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Self chaining","code":""},{"path":"/reference/MCPServer.html","id":"method-mcp-resource-","dir":"Reference","previous_headings":"","what":"Method mcp_resource()","title":"MCP Server Class — MCPServer","text":"Register resource server","code":""},{"path":"/reference/MCPServer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$mcp_resource(name, fn, description = NULL, mime_type = \"text/plain\")"},{"path":"/reference/MCPServer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"name Resource name fn Function returns resource content description Resource description mime_type MIME type resource","code":""},{"path":"/reference/MCPServer.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Self chaining","code":""},{"path":"/reference/MCPServer.html","id":"method-mcp-prompt-","dir":"Reference","previous_headings":"","what":"Method mcp_prompt()","title":"MCP Server Class — MCPServer","text":"Register prompt template server","code":""},{"path":"/reference/MCPServer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$mcp_prompt(name, template, description = NULL, parameters = NULL)"},{"path":"/reference/MCPServer.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"name Prompt name template Prompt template string description Prompt description parameters List parameter definitions","code":""},{"path":"/reference/MCPServer.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Self chaining","code":""},{"path":"/reference/MCPServer.html","id":"method-mcp-source-","dir":"Reference","previous_headings":"","what":"Method mcp_source()","title":"MCP Server Class — MCPServer","text":"Load tools/resources R source file","code":""},{"path":"/reference/MCPServer.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$mcp_source(file)"},{"path":"/reference/MCPServer.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"file Path R file decorated functions","code":""},{"path":"/reference/MCPServer.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Self chaining","code":""},{"path":"/reference/MCPServer.html","id":"method-mcp-package-","dir":"Reference","previous_headings":"","what":"Method mcp_package()","title":"MCP Server Class — MCPServer","text":"Expose functions R package","code":""},{"path":"/reference/MCPServer.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$mcp_package(package, include = NULL, exclude = NULL)"},{"path":"/reference/MCPServer.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"package Package name include Character vector patterns include exclude Character vector patterns exclude","code":""},{"path":"/reference/MCPServer.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Self chaining","code":""},{"path":"/reference/MCPServer.html","id":"method-mcp-run-","dir":"Reference","previous_headings":"","what":"Method mcp_run()","title":"MCP Server Class — MCPServer","text":"Run MCP server","code":""},{"path":"/reference/MCPServer.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$mcp_run(transport = \"http\", host = \"127.0.0.1\", port = NULL)"},{"path":"/reference/MCPServer.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"transport Transport type (\"http\", \"websocket\") host Host address HTTP/WebSocket transport port Port number HTTP/WebSocket transport","code":""},{"path":"/reference/MCPServer.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Server handle (transport-specific)","code":""},{"path":"/reference/MCPServer.html","id":"method-generate-","dir":"Reference","previous_headings":"","what":"Method generate()","title":"MCP Server Class — MCPServer","text":"Generate standalone MCP server package","code":""},{"path":"/reference/MCPServer.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$generate(path = \".\", template = \"full\", overwrite = FALSE)"},{"path":"/reference/MCPServer.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"path Directory create server template Template use (\"full\" \"minimal\") overwrite Whether overwrite existing directory","code":""},{"path":"/reference/MCPServer.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Path generated server directory","code":""},{"path":"/reference/MCPServer.html","id":"method-get-capabilities-","dir":"Reference","previous_headings":"","what":"Method get_capabilities()","title":"MCP Server Class — MCPServer","text":"Get server capabilities initialization","code":""},{"path":"/reference/MCPServer.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$get_capabilities()"},{"path":"/reference/MCPServer.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"List server capabilities","code":""},{"path":"/reference/MCPServer.html","id":"method-execute-tool-","dir":"Reference","previous_headings":"","what":"Method execute_tool()","title":"MCP Server Class — MCPServer","text":"Execute tool","code":""},{"path":"/reference/MCPServer.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$execute_tool(name, arguments = list())"},{"path":"/reference/MCPServer.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"name Tool name arguments Tool arguments","code":""},{"path":"/reference/MCPServer.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Tool result","code":""},{"path":"/reference/MCPServer.html","id":"method-get-resource-","dir":"Reference","previous_headings":"","what":"Method get_resource()","title":"MCP Server Class — MCPServer","text":"Get resource","code":""},{"path":"/reference/MCPServer.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$get_resource(name)"},{"path":"/reference/MCPServer.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"name Resource name","code":""},{"path":"/reference/MCPServer.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"MCP Server Class — MCPServer","text":"Resource content","code":""},{"path":"/reference/MCPServer.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"MCP Server Class — MCPServer","text":"Print method MCP server","code":""},{"path":"/reference/MCPServer.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$print(...)"},{"path":"/reference/MCPServer.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"... Additional arguments (ignored) Extract parameters function signature","code":""},{"path":"/reference/MCPServer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MCP Server Class — MCPServer","text":"objects class cloneable method.","code":""},{"path":"/reference/MCPServer.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"MCP Server Class — MCPServer","text":"","code":"MCPServer$clone(deep = FALSE)"},{"path":"/reference/MCPServer.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCP Server Class — MCPServer","text":"deep Whether make deep clone.","code":""},{"path":"/reference/StdioTransport.html","id":null,"dir":"Reference","previous_headings":"","what":"Stdio Transport for MCP — StdioTransport","title":"Stdio Transport for MCP — StdioTransport","text":"Implements stdio transport MCP communication, reading stdin writing stdout.","code":""},{"path":"/reference/StdioTransport.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Stdio Transport for MCP — StdioTransport","text":"server MCP server instance","code":""},{"path":[]},{"path":"/reference/StdioTransport.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Stdio Transport for MCP — StdioTransport","text":"StdioTransport$new() StdioTransport$start() StdioTransport$stop() StdioTransport$clone()","code":""},{"path":"/reference/StdioTransport.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Stdio Transport for MCP — StdioTransport","text":"Create new stdio transport","code":""},{"path":"/reference/StdioTransport.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stdio Transport for MCP — StdioTransport","text":"","code":"StdioTransport$new(server)"},{"path":"/reference/StdioTransport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stdio Transport for MCP — StdioTransport","text":"server MCP server instance","code":""},{"path":"/reference/StdioTransport.html","id":"method-start-","dir":"Reference","previous_headings":"","what":"Method start()","title":"Stdio Transport for MCP — StdioTransport","text":"Start stdio transport","code":""},{"path":"/reference/StdioTransport.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Stdio Transport for MCP — StdioTransport","text":"","code":"StdioTransport$start()"},{"path":"/reference/StdioTransport.html","id":"method-stop-","dir":"Reference","previous_headings":"","what":"Method stop()","title":"Stdio Transport for MCP — StdioTransport","text":"Stop transport Handle incoming JSON-RPC message Handle initialize request Handle tools/list request Handle tools/call request Handle resources/list request Handle resources/read request Handle prompts/list request Handle prompts/get request Create error response","code":""},{"path":"/reference/StdioTransport.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Stdio Transport for MCP — StdioTransport","text":"","code":"StdioTransport$stop()"},{"path":"/reference/StdioTransport.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Stdio Transport for MCP — StdioTransport","text":"objects class cloneable method.","code":""},{"path":"/reference/StdioTransport.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Stdio Transport for MCP — StdioTransport","text":"","code":"StdioTransport$clone(deep = FALSE)"},{"path":"/reference/StdioTransport.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stdio Transport for MCP — StdioTransport","text":"deep Whether make deep clone.","code":""},{"path":"/reference/can_serialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an R object can be safely serialized to JSON — can_serialize","title":"Check if an R object can be safely serialized to JSON — can_serialize","text":"Check R object can safely serialized JSON","code":""},{"path":"/reference/can_serialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an R object can be safely serialized to JSON — can_serialize","text":"","code":"can_serialize(x)"},{"path":"/reference/can_serialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an R object can be safely serialized to JSON — can_serialize","text":"x R object check","code":""},{"path":"/reference/can_serialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an R object can be safely serialized to JSON — can_serialize","text":"TRUE object can serialized, FALSE otherwise","code":""},{"path":"/reference/create_example_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Example Configuration File — create_example_config","title":"Create Example Configuration File — create_example_config","text":"Creates example configuration file server generation","code":""},{"path":"/reference/create_example_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Example Configuration File — create_example_config","text":"","code":"create_example_config(filename = \"server-config.yaml\", format = \"yaml\")"},{"path":"/reference/create_example_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Example Configuration File — create_example_config","text":"filename Output filename format File format: \"json\" \"yaml\" (default: \"yaml\")","code":""},{"path":"/reference/create_mcp_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a source file with example decorated functions — create_mcp_example","title":"Create a source file with example decorated functions — create_mcp_example","text":"Create source file example decorated functions","code":""},{"path":"/reference/create_mcp_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a source file with example decorated functions — create_mcp_example","text":"","code":"create_mcp_example(file = \"mcp_example.R\", overwrite = FALSE)"},{"path":"/reference/create_mcp_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a source file with example decorated functions — create_mcp_example","text":"file Path create example file overwrite Whether overwrite existing file","code":""},{"path":"/reference/create_mcp_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a source file with example decorated functions — create_mcp_example","text":"file path (invisibly)","code":""},{"path":"/reference/create_server_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Server Directory Structure — create_server_structure","title":"Create Server Directory Structure — create_server_structure","text":"Creates standard directory structure MCP server","code":""},{"path":"/reference/create_server_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Server Directory Structure — create_server_structure","text":"","code":"create_server_structure(base_path, server_name)"},{"path":"/reference/create_server_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Server Directory Structure — create_server_structure","text":"base_path Base directory path server_name Server name","code":""},{"path":"/reference/create_server_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Server Directory Structure — create_server_structure","text":"Path created server directory","code":""},{"path":"/reference/decorators.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MCP Decorators from R Source — decorators","title":"Parse MCP Decorators from R Source — decorators","text":"Functions parsing roxygen2-style decorators (@mcp_tool, @mcp_resource, @mcp_prompt) R source files. enables decorator-based approach similar plumber.","code":""},{"path":"/reference/decorators_to_mcp_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert decorator metadata to MCP registration parameters — decorators_to_mcp_params","title":"Convert decorator metadata to MCP registration parameters — decorators_to_mcp_params","text":"Convert decorator metadata MCP registration parameters","code":""},{"path":"/reference/decorators_to_mcp_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert decorator metadata to MCP registration parameters — decorators_to_mcp_params","text":"","code":"decorators_to_mcp_params(element)"},{"path":"/reference/decorators_to_mcp_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert decorator metadata to MCP registration parameters — decorators_to_mcp_params","text":"element parsed element parse_mcp_decorators","code":""},{"path":"/reference/decorators_to_mcp_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert decorator metadata to MCP registration parameters — decorators_to_mcp_params","text":"list parameters suitable MCP registration","code":""},{"path":"/reference/dot-mcp_custom_serializers.html","id":null,"dir":"Reference","previous_headings":"","what":"Global registry for custom serializers — .mcp_custom_serializers","title":"Global registry for custom serializers — .mcp_custom_serializers","text":"Global registry custom serializers","code":""},{"path":"/reference/dot-mcp_custom_serializers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global registry for custom serializers — .mcp_custom_serializers","text":"","code":".mcp_custom_serializers"},{"path":"/reference/dot-mcp_custom_serializers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global registry for custom serializers — .mcp_custom_serializers","text":"object class environment length 0.","code":""},{"path":"/reference/format_prompts_definition.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Prompts Definition for R Code — format_prompts_definition","title":"Format Prompts Definition for R Code — format_prompts_definition","text":"Format Prompts Definition R Code","code":""},{"path":"/reference/format_prompts_definition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Prompts Definition for R Code — format_prompts_definition","text":"","code":"format_prompts_definition(prompts)"},{"path":"/reference/format_prompts_definition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Prompts Definition for R Code — format_prompts_definition","text":"prompts List prompt definitions","code":""},{"path":"/reference/format_prompts_definition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Prompts Definition for R Code — format_prompts_definition","text":"Formatted R code string","code":""},{"path":"/reference/format_resources_definition.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Resources Definition for R Code — format_resources_definition","title":"Format Resources Definition for R Code — format_resources_definition","text":"Format Resources Definition R Code","code":""},{"path":"/reference/format_resources_definition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Resources Definition for R Code — format_resources_definition","text":"","code":"format_resources_definition(resources)"},{"path":"/reference/format_resources_definition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Resources Definition for R Code — format_resources_definition","text":"resources List resource definitions","code":""},{"path":"/reference/format_resources_definition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Resources Definition for R Code — format_resources_definition","text":"Formatted R code string","code":""},{"path":"/reference/format_tools_definition.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Tools Definition for R Code — format_tools_definition","title":"Format Tools Definition for R Code — format_tools_definition","text":"Format Tools Definition R Code","code":""},{"path":"/reference/format_tools_definition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Tools Definition for R Code — format_tools_definition","text":"","code":"format_tools_definition(tools)"},{"path":"/reference/format_tools_definition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Tools Definition for R Code — format_tools_definition","text":"tools List tool definitions","code":""},{"path":"/reference/format_tools_definition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Tools Definition for R Code — format_tools_definition","text":"Formatted R code string","code":""},{"path":"/reference/from_mcp_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert JSON data back to R objects — from_mcp_json","title":"Convert JSON data back to R objects — from_mcp_json","text":"Reconstructs R objects JSON data created to_mcp_json. Preserves type information including dates, factors, matrices, special R types.","code":""},{"path":"/reference/from_mcp_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert JSON data back to R objects — from_mcp_json","text":"","code":"from_mcp_json(json)"},{"path":"/reference/from_mcp_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert JSON data back to R objects — from_mcp_json","text":"json JSON string already parsed JSON data","code":""},{"path":"/reference/from_mcp_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert JSON data back to R objects — from_mcp_json","text":"R object reconstructed JSON data","code":""},{"path":"/reference/from_mcp_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert JSON data back to R objects — from_mcp_json","text":"function reverses conversion done to_mcp_json, reconstructing: Special numeric values (Inf, -Inf, NaN) Date POSIXct objects timezones Factors original levels Matrices arrays dimensions Data frames S3 objects class information Complex numbers Raw vectors base64 Formulas language objects Note: Environments reconstructed replaced marker objects.","code":""},{"path":"/reference/from_mcp_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert JSON data back to R objects — from_mcp_json","text":"","code":"# Simple JSON string json_str <- '{\"a\": 1, \"b\": [\"hello\", \"world\"]}' from_mcp_json(json_str) #> $a #> [1] 1 #>  #> $b #> $b[[1]] #> [1] \"hello\" #>  #> $b[[2]] #> [1] \"world\" #>  #>   # Round-trip conversion original <- list(   date = Sys.Date(),   values = c(1, 2, Inf),   factor = factor(c(\"a\", \"b\", \"a\")) ) json <- mcp_serialize(original) reconstructed <- from_mcp_json(json)"},{"path":"/reference/generate_from_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Server from Configuration File — generate_from_config","title":"Generate Server from Configuration File — generate_from_config","text":"Generates MCP server configuration file","code":""},{"path":"/reference/generate_from_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Server from Configuration File — generate_from_config","text":"","code":"generate_from_config(config_file, path = \".\", overwrite = FALSE)"},{"path":"/reference/generate_from_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Server from Configuration File — generate_from_config","text":"config_file Path configuration file (JSON YAML) path Directory create server overwrite Whether overwrite existing directory","code":""},{"path":"/reference/generate_from_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Server from Configuration File — generate_from_config","text":"Path generated server","code":""},{"path":"/reference/generate_from_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Server from Configuration File — generate_from_config","text":"","code":"if (FALSE) { # \\dontrun{ # From YAML config generate_from_config(\"server-config.yaml\")  # From JSON config generate_from_config(\"server-config.json\", path = \"./servers\") } # }"},{"path":"/reference/generate_gitignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate .gitignore — generate_gitignore","title":"Generate .gitignore — generate_gitignore","text":"Generate .gitignore","code":""},{"path":"/reference/generate_gitignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate .gitignore — generate_gitignore","text":"","code":"generate_gitignore(server_dir)"},{"path":"/reference/generate_gitignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate .gitignore — generate_gitignore","text":"server_dir Server directory path","code":""},{"path":"/reference/generate_mcp_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate mcp.json Configuration Example — generate_mcp_json","title":"Generate mcp.json Configuration Example — generate_mcp_json","text":"Generate mcp.json Configuration Example","code":""},{"path":"/reference/generate_mcp_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate mcp.json Configuration Example — generate_mcp_json","text":"","code":"generate_mcp_json(server_dir, vars)"},{"path":"/reference/generate_mcp_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate mcp.json Configuration Example — generate_mcp_json","text":"server_dir Server directory path vars Template variables","code":""},{"path":"/reference/generate_mcp_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate MCP Server Package — generate_mcp_server","title":"Generate MCP Server Package — generate_mcp_server","text":"Creates complete MCP server package Node.js wrapper R server implementation","code":""},{"path":"/reference/generate_mcp_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate MCP Server Package — generate_mcp_server","text":"","code":"generate_mcp_server(   name,   title,   description,   version = \"0.1.0\",   path = \".\",   tools = NULL,   resources = NULL,   prompts = NULL,   template = \"full\",   author = NULL,   overwrite = FALSE )"},{"path":"/reference/generate_mcp_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate MCP Server Package — generate_mcp_server","text":"name Server name (used package naming configuration) title Human-readable server title description Server description version Server version (default: \"0.1.0\") path Directory create server (default: current directory) tools List tool definitions (optional) resources List resource definitions (optional) prompts List prompt definitions (optional) template template use: \"full\" \"minimal\" (default: \"full\") author Author name (optional) overwrite Whether overwrite existing directory (default: FALSE)","code":""},{"path":"/reference/generate_mcp_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate MCP Server Package — generate_mcp_server","text":"Path generated server directory","code":""},{"path":"/reference/generate_mcp_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate MCP Server Package — generate_mcp_server","text":"","code":"if (FALSE) { # \\dontrun{ # Generate a simple server generate_mcp_server(\"my-analyzer\", \"My Data Analyzer\",                      \"Analyzes data using R functions\")  # Generate with tools tools <- list(   analyze = list(     description = \"Analyze a dataset\",     parameters = list(       data = list(type = \"string\", description = \"Data to analyze\")     )   ) ) generate_mcp_server(\"analyzer\", \"Data Analyzer\", \"Analyzes data\",                     tools = tools) } # }"},{"path":"/reference/generate_package_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate package.json — generate_package_json","title":"Generate package.json — generate_package_json","text":"Generate package.json","code":""},{"path":"/reference/generate_package_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate package.json — generate_package_json","text":"","code":"generate_package_json(server_dir, vars)"},{"path":"/reference/generate_package_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate package.json — generate_package_json","text":"server_dir Server directory path vars Template variables","code":""},{"path":"/reference/generate_r_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate R Server — generate_r_server","title":"Generate R Server — generate_r_server","text":"Generate R Server","code":""},{"path":"/reference/generate_r_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate R Server — generate_r_server","text":"","code":"generate_r_server(server_dir, vars, tools, resources, prompts, template)"},{"path":"/reference/generate_r_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate R Server — generate_r_server","text":"server_dir Server directory path vars Template variables tools Tool definitions resources Resource definitions prompts Prompt definitions template Template type","code":""},{"path":"/reference/generate_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate README.md — generate_readme","title":"Generate README.md — generate_readme","text":"Generate README.md","code":""},{"path":"/reference/generate_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate README.md — generate_readme","text":"","code":"generate_readme(server_dir, vars)"},{"path":"/reference/generate_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate README.md — generate_readme","text":"server_dir Server directory path vars Template variables","code":""},{"path":"/reference/generate_test_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Test Script — generate_test_script","title":"Generate Test Script — generate_test_script","text":"Generate Test Script","code":""},{"path":"/reference/generate_test_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Test Script — generate_test_script","text":"","code":"generate_test_script(server_dir, vars)"},{"path":"/reference/generate_test_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Test Script — generate_test_script","text":"server_dir Server directory path vars Template variables","code":""},{"path":"/reference/generate_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Node.js Wrapper — generate_wrapper","title":"Generate Node.js Wrapper — generate_wrapper","text":"Generate Node.js Wrapper","code":""},{"path":"/reference/generate_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Node.js Wrapper — generate_wrapper","text":"","code":"generate_wrapper(server_dir, vars)"},{"path":"/reference/generate_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Node.js Wrapper — generate_wrapper","text":"server_dir Server directory path vars Template variables","code":""},{"path":"/reference/get_mcp_serializers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all registered custom serializers — get_mcp_serializers","title":"Get all registered custom serializers — get_mcp_serializers","text":"Get registered custom serializers","code":""},{"path":"/reference/get_mcp_serializers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all registered custom serializers — get_mcp_serializers","text":"","code":"get_mcp_serializers()"},{"path":"/reference/get_mcp_serializers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all registered custom serializers — get_mcp_serializers","text":"List custom serializers","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"NULL coalescing operator — grapes-or-or-grapes","title":"NULL coalescing operator — grapes-or-or-grapes","text":"Returns left-hand side NULL, otherwise returns right-hand side.","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NULL coalescing operator — grapes-or-or-grapes","text":"","code":"x %||% y"},{"path":"/reference/grapes-or-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NULL coalescing operator — grapes-or-or-grapes","text":"x Left-hand side value y Right-hand side value (default)","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NULL coalescing operator — grapes-or-or-grapes","text":"x NULL, otherwise y","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NULL coalescing operator — grapes-or-or-grapes","text":"","code":"NULL %||% \"default\"  # returns \"default\" #> [1] \"default\" \"value\" %||% \"default\"  # returns \"value\" #> [1] \"value\""},{"path":"/reference/load_server_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Server Configuration from File — load_server_config","title":"Load Server Configuration from File — load_server_config","text":"Loads server configuration YAML JSON file","code":""},{"path":"/reference/load_server_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Server Configuration from File — load_server_config","text":"","code":"load_server_config(config_file)"},{"path":"/reference/load_server_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Server Configuration from File — load_server_config","text":"config_file Path configuration file","code":""},{"path":"/reference/load_server_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Server Configuration from File — load_server_config","text":"Configuration list","code":""},{"path":"/reference/mcp-source.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced Source File Handling for MCP — mcp-source","title":"Enhanced Source File Handling for MCP — mcp-source","text":"Functions discovering loading MCP-decorated functions source files directories.","code":""},{"path":"/reference/mcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new Model Context Protocol server — mcp","title":"Create a new Model Context Protocol server — mcp","text":"Creates new MCP server instance can configured tools, resources, prompts running.","code":""},{"path":"/reference/mcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new Model Context Protocol server — mcp","text":"","code":"mcp(name = NULL, version = NULL)"},{"path":"/reference/mcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new Model Context Protocol server — mcp","text":"name Optional name server version Optional version string","code":""},{"path":"/reference/mcp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new Model Context Protocol server — mcp","text":"MCP server object","code":""},{"path":"/reference/mcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new Model Context Protocol server — mcp","text":"","code":"# Create a simple MCP server server <- mcp()  # Create a named server server <- mcp(name = \"My Analysis Server\", version = \"1.0.0\")"},{"path":"/reference/mcp_deserialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Deserialize JSON string to R object from MCP — mcp_deserialize","title":"Deserialize JSON string to R object from MCP — mcp_deserialize","text":"Deserialize JSON string R object MCP","code":""},{"path":"/reference/mcp_deserialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deserialize JSON string to R object from MCP — mcp_deserialize","text":"","code":"mcp_deserialize(json)"},{"path":"/reference/mcp_deserialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deserialize JSON string to R object from MCP — mcp_deserialize","text":"json JSON string deserialize","code":""},{"path":"/reference/mcp_deserialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deserialize JSON string to R object from MCP — mcp_deserialize","text":"R object","code":""},{"path":"/reference/mcp_deserialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deserialize JSON string to R object from MCP — mcp_deserialize","text":"","code":"mcp_deserialize('{\"result\": 42, \"message\": \"success\"}') #> $result #> [1] 42 #>  #> $message #> [1] \"success\" #>"},{"path":"/reference/mcp_hello_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a minimal MCP hello world server — mcp_hello_world","title":"Start a minimal MCP hello world server — mcp_hello_world","text":"function starts simple MCP server single \"hello\" tool demonstrates mcpr package working correctly.","code":""},{"path":"/reference/mcp_hello_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a minimal MCP hello world server — mcp_hello_world","text":"","code":"mcp_hello_world(host = \"127.0.0.1\", port = 8080)"},{"path":"/reference/mcp_hello_world.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a minimal MCP hello world server — mcp_hello_world","text":"host Character string specifying host bind (default: \"127.0.0.1\") port Integer specifying port listen (default: 8080)","code":""},{"path":"/reference/mcp_hello_world.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a minimal MCP hello world server — mcp_hello_world","text":"Invisible NULL. function starts server runs interrupted.","code":""},{"path":"/reference/mcp_hello_world.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a minimal MCP hello world server — mcp_hello_world","text":"","code":"if (FALSE) { # \\dontrun{ # Start the hello world server mcp_hello_world()  # To use with Claude Desktop, add to your config: # { #   \"mcpServers\": { #     \"r-hello\": { #       \"url\": \"http://localhost:8080/mcp\" #     } #   } # } } # }"},{"path":"/reference/mcp_hello_world_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Start an HTTP MCP hello world server — mcp_hello_world_http","title":"Start an HTTP MCP hello world server — mcp_hello_world_http","text":"function starts simple MCP server HTTP single \"hello\" tool demonstrates mcpr package working correctly. Unlike stdio version, server can handle multiple clients easier test standard HTTP tools.","code":""},{"path":"/reference/mcp_hello_world_http.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start an HTTP MCP hello world server — mcp_hello_world_http","text":"","code":"mcp_hello_world_http(   host = \"127.0.0.1\",   port = 8080,   docs = FALSE,   quiet = FALSE )"},{"path":"/reference/mcp_hello_world_http.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start an HTTP MCP hello world server — mcp_hello_world_http","text":"host Character string specifying host bind (default: \"127.0.0.1\") port Integer specifying port listen (default: 8080) docs Logical indicating whether enable Swagger documentation (default: FALSE) quiet Logical indicating whether suppress startup messages (default: FALSE)","code":""},{"path":"/reference/mcp_hello_world_http.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start an HTTP MCP hello world server — mcp_hello_world_http","text":"Invisible NULL. function starts server runs interrupted.","code":""},{"path":"/reference/mcp_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HTTP MCP server — mcp_http","title":"Create an HTTP MCP server — mcp_http","text":"Convenience function create MCP server HTTP transport. function creates server instance configures HTTP.","code":""},{"path":"/reference/mcp_http.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HTTP MCP server — mcp_http","text":"","code":"mcp_http(   name = NULL,   version = NULL,   host = \"127.0.0.1\",   port = 8080,   log_file = NULL,   log_level = \"info\" )"},{"path":"/reference/mcp_http.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HTTP MCP server — mcp_http","text":"name Server name version Server version host Host address (default: \"127.0.0.1\") port Port number (default: 8080) log_file Optional path log file log_level Logging level (\"debug\", \"info\", \"warn\", \"error\", default: \"info\")","code":""},{"path":"/reference/mcp_http.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an HTTP MCP server — mcp_http","text":"MCP server configured HTTP transport","code":""},{"path":"/reference/mcp_http.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an HTTP MCP server — mcp_http","text":"","code":"if (FALSE) { # \\dontrun{ # Create an HTTP MCP server server <- mcp_http(\"My Server\", \"1.0.0\", port = 3000)  # Add a tool server$mcp_tool(   name = \"greet\",   fn = function(name) paste(\"Hello,\", name),   description = \"Greet someone\" )  # Start the server server$mcp_run() } # }"},{"path":"/reference/mcp_serialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Serialize R object to JSON string for MCP — mcp_serialize","title":"Serialize R object to JSON string for MCP — mcp_serialize","text":"Serialize R object JSON string MCP","code":""},{"path":"/reference/mcp_serialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serialize R object to JSON string for MCP — mcp_serialize","text":"","code":"mcp_serialize(x, pretty = FALSE, auto_unbox = TRUE)"},{"path":"/reference/mcp_serialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serialize R object to JSON string for MCP — mcp_serialize","text":"x R object serialize pretty Whether pretty-print JSON auto_unbox Whether automatically unbox single-element vectors","code":""},{"path":"/reference/mcp_serialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serialize R object to JSON string for MCP — mcp_serialize","text":"JSON string representation R object","code":""},{"path":"/reference/mcp_serialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serialize R object to JSON string for MCP — mcp_serialize","text":"","code":"mcp_serialize(list(result = 42, message = \"success\")) #> {\"result\":42,\"message\":\"success\"}"},{"path":"/reference/mcp_source_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load all MCP elements from a directory — mcp_source_directory","title":"Load all MCP elements from a directory — mcp_source_directory","text":"Load MCP elements directory","code":""},{"path":"/reference/mcp_source_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load all MCP elements from a directory — mcp_source_directory","text":"","code":"mcp_source_directory(server, path, pattern = \"\\\\.R$\", recursive = TRUE)"},{"path":"/reference/mcp_source_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load all MCP elements from a directory — mcp_source_directory","text":"server MCPServer instance path Directory path pattern File pattern match recursive Whether scan subdirectories","code":""},{"path":"/reference/mcp_source_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load all MCP elements from a directory — mcp_source_directory","text":"server (invisibly) chaining","code":""},{"path":"/reference/mcpr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mcpr: Model Context Protocol for R — mcpr-package","title":"mcpr: Model Context Protocol for R — mcpr-package","text":"Expose R functions, R resources entire packages Model Context Protocol (MCP). package provides simple, decorator-based system creating MCP servers integrate AI assistants like Claude Desktop. Following patterns established plumber, mcpr makes easy connect R code large language models.","code":""},{"path":[]},{"path":"/reference/mcpr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mcpr: Model Context Protocol for R — mcpr-package","text":"Maintainer: Aleksander Dietrichson dietrichson@chi2labs.com","code":""},{"path":"/reference/parse_function_signature.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse function signature to extract parameter information — parse_function_signature","title":"Parse function signature to extract parameter information — parse_function_signature","text":"Parse function signature extract parameter information","code":""},{"path":"/reference/parse_function_signature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse function signature to extract parameter information — parse_function_signature","text":"","code":"parse_function_signature(fn)"},{"path":"/reference/parse_function_signature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse function signature to extract parameter information — parse_function_signature","text":"fn function object","code":""},{"path":"/reference/parse_function_signature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse function signature to extract parameter information — parse_function_signature","text":"list parameter information suitable JSON Schema","code":""},{"path":"/reference/parse_mcp_decorators.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse decorators from a source file — parse_mcp_decorators","title":"Parse decorators from a source file — parse_mcp_decorators","text":"Parse decorators source file","code":""},{"path":"/reference/parse_mcp_decorators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse decorators from a source file — parse_mcp_decorators","text":"","code":"parse_mcp_decorators(file)"},{"path":"/reference/parse_mcp_decorators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse decorators from a source file — parse_mcp_decorators","text":"file Path R source file","code":""},{"path":"/reference/parse_mcp_decorators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse decorators from a source file — parse_mcp_decorators","text":"list parsed elements decorators function definitions","code":""},{"path":"/reference/register_decorated_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Register decorated elements with an MCP server — register_decorated_elements","title":"Register decorated elements with an MCP server — register_decorated_elements","text":"Register decorated elements MCP server","code":""},{"path":"/reference/register_decorated_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register decorated elements with an MCP server — register_decorated_elements","text":"","code":"register_decorated_elements(server, elements, env = parent.frame())"},{"path":"/reference/register_decorated_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register decorated elements with an MCP server — register_decorated_elements","text":"server MCPServer instance elements List parsed elements parse_mcp_decorators env Environment containing function definitions","code":""},{"path":"/reference/register_decorated_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register decorated elements with an MCP server — register_decorated_elements","text":"server (invisibly) chaining","code":""},{"path":"/reference/register_mcp_serializer.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a custom serializer for a specific class — register_mcp_serializer","title":"Register a custom serializer for a specific class — register_mcp_serializer","text":"Register custom serializer specific class","code":""},{"path":"/reference/register_mcp_serializer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a custom serializer for a specific class — register_mcp_serializer","text":"","code":"register_mcp_serializer(class_name, serializer_func)"},{"path":"/reference/register_mcp_serializer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a custom serializer for a specific class — register_mcp_serializer","text":"class_name Character, name R class serializer_func Function takes object returns JSON-compatible representation","code":""},{"path":"/reference/register_mcp_serializer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a custom serializer for a specific class — register_mcp_serializer","text":"","code":"# Register a custom serializer for spatial data if (requireNamespace(\"sf\", quietly = TRUE)) {   register_mcp_serializer(\"sf\", function(obj) {     list(       type = \"geojson\",       data = sf::st_as_geojson(obj)     )   }) }"},{"path":"/reference/replace_template_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Template Variables — replace_template_vars","title":"Replace Template Variables — replace_template_vars","text":"Replaces {{VARIABLE}} placeholders template content actual values","code":""},{"path":"/reference/replace_template_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Template Variables — replace_template_vars","text":"","code":"replace_template_vars(content, vars)"},{"path":"/reference/replace_template_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Template Variables — replace_template_vars","text":"content Character vector template content vars Named list variable replacements","code":""},{"path":"/reference/replace_template_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Template Variables — replace_template_vars","text":"Character vector replacements made","code":""},{"path":"/reference/scan_mcp_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Scan directory for R files with MCP decorators — scan_mcp_directory","title":"Scan directory for R files with MCP decorators — scan_mcp_directory","text":"Scan directory R files MCP decorators","code":""},{"path":"/reference/scan_mcp_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scan directory for R files with MCP decorators — scan_mcp_directory","text":"","code":"scan_mcp_directory(path, pattern = \"\\\\.R$\", recursive = TRUE)"},{"path":"/reference/scan_mcp_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scan directory for R files with MCP decorators — scan_mcp_directory","text":"path Directory path scan pattern File pattern match (default: \"\\\\.R$\") recursive Whether scan subdirectories","code":""},{"path":"/reference/scan_mcp_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scan directory for R files with MCP decorators — scan_mcp_directory","text":"list files containing MCP decorators","code":""},{"path":"/reference/stream_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a streaming converter for large data frames — stream_dataframe","title":"Create a streaming converter for large data frames — stream_dataframe","text":"Create streaming converter large data frames","code":""},{"path":"/reference/stream_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a streaming converter for large data frames — stream_dataframe","text":"","code":"stream_dataframe(df, chunk_size = 1000, callback)"},{"path":"/reference/stream_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a streaming converter for large data frames — stream_dataframe","text":"df Data frame stream chunk_size Number rows per chunk callback Function call chunk","code":""},{"path":"/reference/to_mcp_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R objects to JSON-compatible format for MCP — to_mcp_json","title":"Convert R objects to JSON-compatible format for MCP — to_mcp_json","text":"Converts various R objects JSON-compatible format, preserving type information possible. Handles special types like dates, factors, matrices, special numeric values (Inf, -Inf, NaN).","code":""},{"path":"/reference/to_mcp_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R objects to JSON-compatible format for MCP — to_mcp_json","text":"","code":"to_mcp_json(   x,   auto_unbox = TRUE,   size_limit = 1e+06,   custom_serializers = list() )"},{"path":"/reference/to_mcp_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R objects to JSON-compatible format for MCP — to_mcp_json","text":"x R object convert auto_unbox Whether automatically unbox single-element vectors size_limit Maximum object size bytes using large object handling (default: 1MB) custom_serializers List custom serializers specific classes","code":""},{"path":"/reference/to_mcp_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R objects to JSON-compatible format for MCP — to_mcp_json","text":"JSON-compatible representation R object","code":""},{"path":"/reference/to_mcp_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert R objects to JSON-compatible format for MCP — to_mcp_json","text":"function handles following R types: Basic types: NULL, logical, numeric, character, integer Special numeric values: Inf, -Inf, NaN Date/time types: Date, POSIXct, POSIXlt Complex numbers Raw vectors (binary data) Factors (levels preserved) Matrices arrays (dimensions) Data frames Lists (recursive conversion) S3 S4 objects Formulas language objects Environments (replaced markers)","code":""},{"path":"/reference/to_mcp_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert R objects to JSON-compatible format for MCP — to_mcp_json","text":"","code":"# Basic types to_mcp_json(list(a = 1, b = \"hello\")) #> $a #> [x] 1 #>  #> $b #> [x] \"hello\" #>  to_mcp_json(c(TRUE, FALSE, NA)) #> [1]  TRUE FALSE    NA  # Special numeric values to_mcp_json(c(1, Inf, -Inf, NaN)) #> $values #> [1] \"1\"    \"Inf\"  \"-Inf\" \"NaN\"  #>  #> $special_indices #> [1] 2 3 4 #>  #> $`_mcp_type` #> [1] \"numeric_vector_special\" #>   # Dates and times to_mcp_json(Sys.Date()) #> $values #> [1] \"2025-06-20\" #>  #> $`_mcp_type` #> [1] \"Date\" #>  to_mcp_json(Sys.time()) #> $values #> [1] \"2025-06-20T17:54:51\" #>  #> $timezone #> [1] \"UTC\" #>  #> $`_mcp_type` #> [1] \"POSIXct\" #>   # Data frames to_mcp_json(data.frame(x = 1:3, y = letters[1:3])) #> $x #> [1] 1 2 3 #>  #> $y #> [1] \"a\" \"b\" \"c\" #>  #> attr(,\"_mcp_type\") #> [1] \"data.frame\" #> attr(,\"_mcp_nrow\") #> [1] 3  # Complex types to_mcp_json(matrix(1:6, nrow = 2)) #> $data #> [1] 1 2 3 4 5 6 #>  #> $dim #> [1] 2 3 #>  #> $dimnames #> NULL #>  #> $`_mcp_type` #> [1] \"matrix\" #>  to_mcp_json(factor(c(\"a\", \"b\", \"a\"))) #> $levels #> [1] \"a\" \"b\" #>  #> $values #> [1] 1 2 1 #>  #> $`_mcp_type` #> [1] \"factor\" #>  to_mcp_json(3 + 4i) #> $real #> [1] 3 #>  #> $imaginary #> [1] 4 #>  #> $`_mcp_type` #> [1] \"complex\" #>"},{"path":"/reference/validate_against_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate R object against JSON schema — validate_against_schema","title":"Validate R object against JSON schema — validate_against_schema","text":"Validate R object JSON schema","code":""},{"path":"/reference/validate_against_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate R object against JSON schema — validate_against_schema","text":"","code":"validate_against_schema(value, schema)"},{"path":"/reference/validate_against_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate R object against JSON schema — validate_against_schema","text":"value R object validate schema JSON schema definition","code":""},{"path":"/reference/validate_against_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate R object against JSON schema — validate_against_schema","text":"TRUE valid, error otherwise","code":""},{"path":"/reference/validate_prompts_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Prompts Configuration — validate_prompts_config","title":"Validate Prompts Configuration — validate_prompts_config","text":"Validate Prompts Configuration","code":""},{"path":"/reference/validate_prompts_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Prompts Configuration — validate_prompts_config","text":"","code":"validate_prompts_config(prompts)"},{"path":"/reference/validate_prompts_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Prompts Configuration — validate_prompts_config","text":"prompts Prompts configuration","code":""},{"path":"/reference/validate_resources_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Resources Configuration — validate_resources_config","title":"Validate Resources Configuration — validate_resources_config","text":"Validate Resources Configuration","code":""},{"path":"/reference/validate_resources_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Resources Configuration — validate_resources_config","text":"","code":"validate_resources_config(resources)"},{"path":"/reference/validate_resources_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Resources Configuration — validate_resources_config","text":"resources Resources configuration","code":""},{"path":"/reference/validate_server_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Server Configuration — validate_server_config","title":"Validate Server Configuration — validate_server_config","text":"Validates server configuration meets requirements","code":""},{"path":"/reference/validate_server_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Server Configuration — validate_server_config","text":"","code":"validate_server_config(config)"},{"path":"/reference/validate_server_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Server Configuration — validate_server_config","text":"config Server configuration list","code":""},{"path":"/reference/validate_server_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Server Configuration — validate_server_config","text":"TRUE valid, otherwise throws error","code":""},{"path":"/reference/validate_tools_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Tools Configuration — validate_tools_config","title":"Validate Tools Configuration — validate_tools_config","text":"Validate Tools Configuration","code":""},{"path":"/reference/validate_tools_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Tools Configuration — validate_tools_config","text":"","code":"validate_tools_config(tools)"},{"path":"/reference/validate_tools_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Tools Configuration — validate_tools_config","text":"tools Tools configuration","code":""},{"path":"/release-v0.9.0-draft.html","id":null,"dir":"","previous_headings":"","what":"Draft Release for v0.9.0","title":"Draft Release for v0.9.0","text":"PR #29 merged, create new release : Tag: v0.9.0 Target: main (PR merge) Release title: mcpr v0.9.0 - First Official Release Release body: ’re excited announce first official release mcpr - Model Context Protocol R! 🎉","code":""},{"path":"/release-v0.9.0-draft.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Draft Release for v0.9.0","text":"mcpr enables R developers expose functions, resources, entire packages Model Context Protocol (MCP), allowing seamless integration AI assistants like Claude Desktop. package brings power R’s statistical data analysis capabilities directly AI workflows.","code":""},{"path":[]},{"path":"/release-v0.9.0-draft.html","id":"rocket-http-based-architecture","dir":"","previous_headings":"Key Features","what":"🚀 HTTP-Based Architecture","title":"Draft Release for v0.9.0","text":"Reliable HTTP transport stable connections Claude Desktop Support multiple concurrent clients Easy testing standard HTTP tools Robust error handling JSON-RPC compliance","code":""},{"path":"/release-v0.9.0-draft.html","id":"art-decorator-system","dir":"","previous_headings":"Key Features","what":"🎨 Decorator System","title":"Draft Release for v0.9.0","text":"Following patterns established plumber, mcpr provides intuitive decorator system: - @mcp_tool - Expose functions callable tools - @mcp_resource - Provide data information resources - @mcp_prompt - Define reusable prompt templates","code":""},{"path":"/release-v0.9.0-draft.html","id":"computer-flexible-server-creation","dir":"","previous_headings":"Key Features","what":"💻 Flexible Server Creation","title":"Draft Release for v0.9.0","text":"Programmatic API: Create servers dynamically R scripts Decorator-based: Annotate existing functions minimal changes Server Generation: Generate standalone server packages","code":""},{"path":"/release-v0.9.0-draft.html","id":"books-comprehensive-documentation","dir":"","previous_headings":"Key Features","what":"📚 Comprehensive Documentation","title":"Draft Release for v0.9.0","text":"Detailed vignettes creating servers using decorators Extensive function documentation Real-world examples included","code":""},{"path":"/release-v0.9.0-draft.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Draft Release for v0.9.0","text":"","code":"# Install from GitHub devtools::install_github(\"chi2labs/mcpr@v0.9.0\")"},{"path":"/release-v0.9.0-draft.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Draft Release for v0.9.0","text":"","code":"library(mcpr)  # Create a server with decorators server <- mcp(\"My R Server\", \"1.0.0\") server$mcp_source(\"my-functions.R\") server$mcp_run(transport = \"http\", port = 8080)"},{"path":"/release-v0.9.0-draft.html","id":"whats-changed","dir":"","previous_headings":"","what":"What’s Changed","title":"Draft Release for v0.9.0","text":"Initial release core MCP functionality HTTP transport implementation Decorator system tools, resources, prompts Server generation utilities Comprehensive documentation","code":""},{"path":"/release-v0.9.0-draft.html","id":"whats-next","dir":"","previous_headings":"","what":"What’s Next","title":"Draft Release for v0.9.0","text":"’re planning several enhancements future releases: - Subscription support real-time updates (#17) - Automatic type inference function signatures (#12) - Package-level exports (#13) - Enhanced validation error messages (#6)","code":""},{"path":"/release-v0.9.0-draft.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Draft Release for v0.9.0","text":"welcome contributions! Please see contributing guidelines feel free open issues submit pull requests. Full Changelog: https://github.com/chi2labs/mcpr/commits/v0.9.0 detailed documentation, visit package website.","code":""}]
